{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "type": "object",
  "properties": {
    "enabled": {
      "type": "boolean",
      "description": "Boolean, default - false. Enables the auditd role to install the auditd packages and configure rules. CIS rules: 4.1.1.1, 4.1.1.2."
    },
    "enabledAtBoot": {
      "type": "boolean",
      "description": "Boolean, default - false. Configures grub to audit processes that can be audited even if they start up prior to auditd startup. CIS rule: 4.1.1.3."
    },
    "backlogLimit": {
      "type": "integer",
      "description": "Integer, default - none. Configures the backlog to hold records. If during boot audit=1 is configured, the backlog holds 64 records. If more than 64 records are created during boot, auditd records will be lost with a potential malicious activity being undetected. CIS rule: 4.1.1.4."
    },
    "maxLogFile": {
      "type": "integer",
      "description": "Integer, default - none. Configures the maximum size of the audit log file. Once the log reaches the maximum size, it is rotated and a new log file is created. CIS rule: 4.1.2.1."
    },
    "maxLogFileAction": {
      "type": "string",
      "enum": ["keep_logs", "rotate", "compress"],
      "description": "String, default - none. Defines handling of the audit log file reaching the maximum file size.\n- keep_logs: rotate logs but never delete them.\n- rotate: add a cron job to compress rotated log files and keep maximum 5 compressed files.\n- compress: compress log files and keep them under the /var/log/auditd/ directory. Requires auditd_max_log_file_keep to be enabled.\nCIS rule: 4.1.2.2."
    },
    "maxLogFileKeep": {
      "type": "integer",
      "description": "Integer, default - 5. Defines the number of compressed log files to keep under the /var/log/auditd/ directory. Requires auditd_max_log_file_action=compress."
    },
    "mayHaltSystem": {
      "type": "boolean",
      "description": "Boolean, default - false. Halts the system when the audit logs are full. Applies the following configuration: space_left_action=email, action_mail_acct=root, admin_space_left_action=halt. CIS rule: 4.1.2.3."
    },
    "customRules": {
      "type": "string",
      "description": "String, default - none. Base64-encoded content of the 60-custom.rules file for any architecture."
    },
    "presetRules": {
      "type": "string",
      "description": "String, default - none. Comma-separated list of built-in preset rules (access, actions, delete, docker, identity, immutable, logins, mac-policy, modules, mounts, perm-mod, privileged, scope, session, system-locale, time-change). Also supports groups (ubuntu-cis-rules, docker-cis-rules) and keywords (none, all, !<rule> for exclusions). Since Container Cloud 2.28.0, presetRules supports collecting grouped CIS rules. Example: 'all,!immutable,!sessions' enables all rules except immutable and sessions."
    }
  },
  "required": ["enabled"]
}
